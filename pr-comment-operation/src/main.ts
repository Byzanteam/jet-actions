import * as github from '@actions/github'
import * as core from '@actions/core'

async function run() {
  try {
    const message_body = core.getInput('body')
    const token = core.getInput('github_token')

    const context = github.context
    const pr_number = context.payload.pull_request?.number
    const octokit = github.getOctokit(token)
    const comment_tag_pattern = `<!-- COMMENT GENERATED BY ACTIONS -->`

    if (!pr_number) {
      core.setFailed('No pull request in current context.')
      return
    }

    const body = `${message_body}\n${comment_tag_pattern}`

    const listCommentsResp = await octokit.rest.issues.listComments({
      ...context.repo,
      issue_number: pr_number
    })

    for (const comment of listCommentsResp.data) {
      if (comment.body?.includes(comment_tag_pattern)) {
        await octokit.rest.issues.deleteComment({
          ...context.repo,
          comment_id: comment.id,
          body
        })
      }
    }

    await octokit.rest.issues.createComment({
      ...context.repo,
      issue_number: pr_number,
      body
    })
    return
  } catch (error) {
    if (error instanceof Error) {
      core.setFailed(error.message)
    }
  }
}

run()
