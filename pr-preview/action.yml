ame: front pr preview deploy
description: "前端提交pull request 自动部署并反向代理"
INPUTS:
  context:
    description: "Build's context is the set of files located in the specified PATH or URL"
    required: false
    default: .
  dockerfile:
    description: path to Dockerfile
    required: false
    default: ./deploy/Dockerfile
  build_args:
    description: List of build-time variables
    required: false
  package_file:
    description: The package.json file
    default: package.json
    required: false
  kubectl_version:
    description: "Version of kubectl to use"
    required: false
    default: "1.25.7"
  deploy_file:
    description: "deploy app file"
    required: false
    default: ./frontApp.yaml

runs:
  using: 'composite'
  steps:
    - name: Build Image
      uses: byzanteam/jet-actions/fe-build-image@main
      with:
        context: ${{ inputs.context }}
        github_token: ${{ secret.REGISTRY_TOKEN }}
        docker_file: ${{ inputs.dockerfile }}
        build-args: |
          ${{ inputs.build_args }}
        package_file: ${{ inputs.package_file }}
    - name: install kubectl
      run: |
        sudo curl --retry 5 --retry-delay 2 --fail -sL -o /usr/local/bin/kubectl "https://storage.googleapis.com/kubernetes-release/release/v${{ inputs.kubectl_version }}/bin/linux/amd64/kubectl"
        sudo chmod +x /usr/local/bin/kubectl
        mkdir -p $HOME/.kube
        echo "${{ secret.KUBE_CONF }}" | base64 -d > $HOME/.kube/config
    - name: Extract app name and version
      id: extract
      run: |
        APP_NAME=$(jq -r '.name' ${{ inputs.package_file }})
        APP_VERSION=$(jq -r '.version' ${{ inputs.package_file }})
        echo "app_name=$APP_NAME" >> $GITHUB_OUTPUT
        echo "app_version=$APP_VERSION" >> $GITHUB_OUTPUT
    - name: Render app.yaml template
      run: |
        sed -i "s/{{ frontApp_name }}/${{ steps.build.outputs.app_name }}/g" ${{ inputs.deploy_file }}
        sed -i "s/{{ frontApp_version }}/${{ steps.build.outputs.app_version }}/g" ${{ inputs.deploy_file }}
    - name: Deploy front app
      run: |
        echo ${{ secret.KUBE_CONF }} | base64 -d > kubeconfig
        export KUBECONFIG=kubeconfig
        kubectl create secret docker-registry ${{ steps.build.outputs.app_name }}-docker-registry \
        --docker-server=ghcr.io/ \
        --docker-username=${{ github.actor }} \
        --docker-password=${{ secret.GITHUB_TOKEN }}

        kubectl apply -f ${{ inputs.deploy_file }}
