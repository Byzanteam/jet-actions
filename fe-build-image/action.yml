name: 'FE Build Image'
description: Build and push front-end image for deploy
inputs:
  registries:
    description: "The list of registries. Format like this: registry-site,namespace,username,password"
    required: true
  context:
    description: "Build's context is the set of files located in the specified PATH or URL"
    required: false
    default: .
  dockerfile:
    description: path to Dockerfile
    required: false
    default: ./deploy/Dockerfile
  build_args:
    description: List of build-time variables
    required: false
  package_file:
    description: The package.json file
    default: package.json
    required: false

runs:
  using: 'composite'
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up Docker image name
      id: image
      shell: bash
      run: |
        echo "image_name=`basename ${{ github.repository }}`" >> $GITHUB_OUTPUT

    - name: Set up Docker registries info
      id: registries
      shell: bash
      run: |
        IMAGE_NAME=${{ steps.image.outputs.image_name }}
        echo "images<<EOF" >> $GITHUB_OUTPUT
        echo "${{ inputs.registries }}" | while read line; do
          echo "$line" | awk -F',' "{print \$1\"/\"\$2\"/$IMAGE_NAME\"}" >> $GITHUB_OUTPUT
        done
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Login to the custom registries
      shell: bash
      run: |
        echo "${{ inputs.registries }}" | while read line; do
          REGISTRY=$(echo $line | awk -F',' '{print $1}')
          USERNAME=$(echo $line | awk -F',' '{print $3}')
          PASSWORD=$(echo $line | awk -F',' '{print $4}')
          echo $PASSWORD | docker login -u $USERNAME --password-stdin $REGISTRY
        done

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ steps.registries.outputs.images }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        build-args: |
          APP_VSN=${{ steps.meta.outputs.version }}
          APP_NAME=${{ steps.image.outputs.image_name }}
          SOURCE_REPO_URL=${{ github.repositoryUrl }}
          SOURCE_SHA=${{ github.sha }}
          ${{ inputs.build_args }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Move cache
      shell: bash
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Logout the custom registries
      shell: bash
      run: |
        echo "${{ inputs.registries }}" | while read line; do
          REGISTRY=$(echo $line | awk -F',' '{print $1}')
          docker logout $REGISTRY
        done
