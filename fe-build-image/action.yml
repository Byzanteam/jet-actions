name: 'FE Build Image'
description: Build and push front-end image for deploy
inputs:
  registries:
    description: "This parameter is a list of registries separated by a newline character. Each registry should be formatted as follows: ${hostname},${namespace},${username},${password}."
    required: false
    default: ghcr.io,byzanteam,${{ github.repository_owner }},${{ github.token }}
  context:
    description: "Build's context is the set of files located in the specified PATH or URL"
    required: false
    default: .
  dockerfile:
    description: Path to Dockerfile
    required: false
    default: ./deploy/Dockerfile
  build_args:
    description: List of build-time variables
    required: false
  image_name:
    description: Set an image name, or derive it from the repo name by default
    required: false

runs:
  using: 'composite'
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up Docker image name
      id: image
      shell: bash
      run: |
        REPO_NAME=$(basename ${{ github.repository }})
        echo "image_name=$([ -n "${{ inputs.image_name }}" ] && echo "${{ inputs.image_name }}" || echo "$REPO_NAME")" >> $GITHUB_OUTPUT

    - name: Set up Docker registries info
      id: registries
      shell: bash
      run: |
        IMAGE_NAME=${{ steps.image.outputs.image_name }}
        echo "images<<EOF" >> $GITHUB_OUTPUT
        echo "${{ inputs.registries }}" | while read line; do
          echo "$line" | awk -F',' "{print \$1\"/\"\$2\"/$IMAGE_NAME\"}" >> $GITHUB_OUTPUT
        done
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Login to the custom registries
      shell: bash
      run: |
        echo "${{ inputs.registries }}" | while read line; do
          REGISTRY=$(echo $line | awk -F',' '{print $1}')
          USERNAME=$(echo $line | awk -F',' '{print $3}')
          PASSWORD=$(echo $line | awk -F',' '{print $4}')
          echo "$PASSWORD" | docker login -u $USERNAME --password-stdin $REGISTRY
        done

    - name: Buildx
      uses: byzanteam/jet/jet-actions/setup-multi-platform-buildx@main

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ steps.registries.outputs.images }}
        tags: |
          type=raw,enable={{is_default_branch}},value=nightly
          type=sha
          type=semver,pattern={{version}}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        build-args: |
          APP_NAME=${{ steps.image.outputs.image_name }}
          APP_VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          APP_REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          SOURCE_REPO_URL=${{ github.repositoryUrl }}
          ${{ inputs.build_args }}
        push: true
        labels: ${{ steps.meta.outputs.labels }}
        tags: ${{ steps.meta.outputs.tags }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=registry,ref=ghcr.io/byzanteam/${{ steps.image.outputs.image_name }}:buildcache
        cache-to: type=registry,ref=ghcr.io/byzanteam/${{ steps.image.outputs.image_name }}:buildcache,mode=max
